spring:
  profiles:
    active: dev # 激活开发环境配置
---
server:
  port: 7001
spring:
  profiles: dev
  application:
    name: microservice-zuul-gateway

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:6001/eureka/,http://localhost:6002/eureka/
  instance:
    instance-id: ${spring.application.name}:${server.port}
    prefer-ip-address: true


zuul:
  routes:
    provider-product: # 路由名称，名称任意，路由名称唯一
      path: /product/** # 访问路径
      serviceId: microservice-product # 指定服务ID，会自动从Eureka中找到此服务的ip和端 口
      stripPrefix: false # 代理转发时去掉前缀，false:代理转发时不去掉前缀 例如:为true时 请求 /product/get/1，代理转发到/get/1
      # 如果多个服务需要经过路由，则同povider-product方式继续添加，例如:
    #provider-order:
      #path: /order/**
      #serviceId: microservice-order
      #stripPrefix: false
---
server:
  port: 7001
spring:
  profiles: prod
  application:
    name: microservice-zuul-gateway

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:6001/eureka/,http://localhost:6002/eureka/
  instance:
    instance-id: ${spring.application.name}:${server.port}
    prefer-ip-address: true


zuul:
  routes:
    provider-product: # 路由名称，名称任意，路由名称唯一
      path: /product/** # 访问路径
      serviceId: microservice-product # 指定服务ID，会自动从Eureka中找到此服务的ip和端 口
      stripPrefix: false # 代理转发时去掉前缀，false:代理转发时不去掉前缀 例如:为true时 请求 /product/get/1，代理转发到/get/1
      # 如果多个服务需要经过路由，则同povider-product方式继续添加，例如:
    #provider-order:
      #path: /order/**
      #serviceId: microservice-order
      #stripPrefix: false